import matplotlib.pyplot as plt
import numpy as np

'''
# 9 GRID OPT-1 150
g9 = np.array([45.28, 48.88, 52.28, 56.12, 59.0, 61.48, 63.4, 64.76, 65.64, 66.44, 67.12, 67.64, 68.08, 68.36, 68.48, 68.6, 68.8, 68.88, 68.92, 69.0, 69.04, 69.08, 69.12, 69.16, 69.2, 69.2, 69.24, 69.24, 69.24, 69.28, 69.28, 69.28, 69.28, 69.28, 69.28, 69.28, 69.28, 69.28, 69.28, 69.28, 69.28, 69.28, 69.28, 69.28, 69.28, 69.28, 69.28, 69.28, 69.28, 69.28])
g9_s = np.array([5.6816898894607055, 6.172973351635337, 6.434407509631326, 7.185095684818679, 7.244308110509933, 8.13938572620809, 8.347454701883683, 8.519530503496071, 8.517652258691946, 8.588736810497805, 8.46319088760262, 8.740160181598503, 8.903572316772633, 9.019445659240926, 9.029374286183955, 9.121403400793104, 9.081850031794183, 9.262051608580034, 9.251680928350263, 9.376566535784834, 9.416920940519782, 9.41029223775755, 9.407741493047096, 9.392252126087756, 9.448809448814174, 9.448809448814174, 9.492228400117645, 9.492228400117645, 9.492228400117645, 9.552046901057386, 9.552046901057386, 9.552046901057386, 9.552046901057386, 9.552046901057386, 9.552046901057386, 9.552046901057386, 9.552046901057386, 9.552046901057386, 9.552046901057386, 9.552046901057386, 9.552046901057386, 9.552046901057386, 9.552046901057386, 9.552046901057386, 9.552046901057386, 9.552046901057386, 9.552046901057386, 9.552046901057386, 9.552046901057386, 9.552046901057386])

g16 = np.array([45.28, 49.92, 54.6, 58.08, 61.0, 63.24, 64.8, 66.48, 67.68, 68.6, 69.08, 69.84, 70.4, 70.68, 70.88, 71.04, 71.28, 71.32, 71.52, 71.72, 71.76, 71.8, 71.84, 71.84, 71.88, 71.92, 71.96, 72.0, 72.0, 72.04, 72.04, 72.04, 72.04, 72.04, 72.04, 72.04, 72.04, 72.04, 72.04, 72.04, 72.04, 72.04, 72.04, 72.04, 72.04, 72.04, 72.04, 72.04, 72.04, 72.04])
g16_s = np.array([5.6816898894607055, 6.105210889068452, 6.870225614927067, 7.076270203998714, 7.939773296511683, 8.291103665978373, 8.202438661763953, 8.198146131900797, 8.11773367387721, 8.089499366462674, 8.059379628730738, 8.234949908772974, 7.904429138147802, 7.739353978207741, 7.747618989083033, 7.701843935058668, 7.7486514955829575, 7.708281261085379, 7.7620615818221905, 7.830810941403195, 7.946219226776971, 8.0049984384758, 7.998399839967992, 7.998399839967992, 8.046465062373663, 8.00959424690165, 8.05222950492595, 8.049844718999243, 8.049844718999243, 8.09681418830888, 8.09681418830888, 8.09681418830888, 8.09681418830888, 8.09681418830888, 8.09681418830888, 8.09681418830888, 8.09681418830888, 8.09681418830888, 8.09681418830888, 8.09681418830888, 8.09681418830888, 8.09681418830888, 8.09681418830888, 8.09681418830888, 8.09681418830888, 8.09681418830888, 8.09681418830888, 8.09681418830888, 8.09681418830888, 8.09681418830888])

s4 = np.array([45.28, 45.28, 45.64, 48.64, 50.96, 51.16, 53.4, 55.36, 55.6, 57.52, 58.64, 58.72, 60.16, 60.92, 61.04, 62.12, 62.32, 62.32, 63.04, 63.56, 63.56, 64.0, 64.2, 64.2, 64.32, 64.4, 64.4, 64.68, 64.8, 64.8, 64.88, 64.96, 64.96, 65.04, 65.12, 65.12, 65.12, 65.16, 65.16, 65.16, 65.16, 65.2, 65.24, 65.24, 65.24, 65.24, 65.24, 65.24, 65.24, 65.24])
s4_s = np.array([5.6816898894607055, 5.6816898894607055, 5.656005657705799, 6.025811148716826, 6.359119435896766, 6.233329768269925, 6.1838499334961226, 6.626492284761222, 6.48074069840786, 6.9691893359270995, 7.165919340880136, 7.180640639942929, 7.540185674106439, 7.88375545029144, 7.957285969474769, 8.194241880735522, 8.18642779238906, 8.18642779238906, 8.287243208691295, 8.428902656929903, 8.428902656929903, 8.541662601625049, 8.620904824900922, 8.620904824900922, 8.693537829905612, 8.644073113989725, 8.644073113989725, 8.875674622247033, 8.962142600963231, 8.962142600963231, 8.994754026653537, 8.941946096907541, 8.941946096907541, 9.061920326288464, 9.02139678763771, 9.02139678763771, 9.02139678763771, 9.022992851598632, 9.022992851598632, 9.022992851598632, 9.022992851598632, 9.02884267223657, 9.030083056096439, 9.030083056096439, 9.030083056096439, 9.030083056096439, 9.030083056096439, 9.030083056096439, 9.030083056096439, 9.030083056096439])

s5 = np.array([45.28, 45.28, 45.56, 48.48, 50.76, 50.92, 53.84, 55.72, 55.8, 57.56, 58.88, 58.92, 60.2, 61.08, 61.12, 62.16, 62.68, 62.68, 63.28, 63.8, 63.8, 64.2, 64.56, 64.56, 64.84, 65.0, 65.0, 65.0, 65.2, 65.2, 65.28, 65.36, 65.36, 65.56, 65.6, 65.6, 65.64, 65.68, 65.68, 65.68, 65.68, 65.68, 65.76, 65.76, 65.76, 65.76, 65.76, 65.76, 65.76, 65.76])
s5_s = np.array([5.6816898894607055, 5.6816898894607055, 5.55755341854669, 5.920270264101125, 6.488636220347078, 6.541681740959278, 6.90321664153748, 7.079661008833685, 7.048404074682439, 7.21154629743164, 7.506370627673536, 7.525529881676108, 7.934733769950949, 7.848159019795662, 7.783675224468195, 8.273717423262653, 8.431939278718746, 8.431939278718746, 8.729352782423218, 9.15204895091804, 9.15204895091804, 9.103845341392834, 9.086605526818031, 9.086605526818031, 9.05838837763098, 9.006664199358163, 9.006664199358163, 9.006664199358163, 9.103845341392834, 9.103845341392834, 9.171782814698568, 9.134024304762933, 9.134024304762933, 9.398212596020585, 9.342376571301331, 9.342376571301331, 9.329008521809806, 9.306857686673842, 9.306857686673842, 9.306857686673842, 9.306857686673842, 9.306857686673842, 9.27482614392313, 9.27482614392313, 9.27482614392313, 9.27482614392313, 9.27482614392313, 9.27482614392313, 9.27482614392313, 9.27482614392313])

plt.plot([i for i in range(len(g9))], g9, color = 'blue', label = '9 Grids 150 nodes')
plt.fill_between([i for i in range(len(g9))], g9 - g9_s, g9 + g9_s, alpha = 0.1, color = 'blue')

plt.plot([i for i in range(len(g16))], g16, color = 'green', label = '16 Grids 150 nodes')
plt.fill_between([i for i in range(len(g16))], g16 - g16_s, g16 + g16_s, alpha = 0.1, color = 'green')

plt.plot([i for i in range(len(s4))], s4, color = 'brown', label = 'Conv. 0.4 Sampling 150 nodes')
plt.fill_between([i for i in range(len(s4_s))], s4 - s4_s, s4 + s4_s, alpha = 0.1, color = 'brown')

plt.plot([i for i in range(len(s5))], s5, color = 'black', label = 'Conv. 0.5 Sampling 150 nodes')
plt.fill_between([i for i in range(len(s5_s))], s5 - s5_s, s5 + s5_s, alpha = 0.1, color = 'black')

plt.legend(loc = 'lower right')

plt.xlabel('Time epoch', fontsize = 15)
plt.ylabel('Cumulative count', fontsize = 15)
plt.tight_layout()

plt.savefig('Comp.png', dpi = 300)
plt.show()
'''

'''
A = [(9.246228904724122, 0.8250189141378995),
     (34.360814046859744, 6.134333100021293),
     (224.88387566566468, 29.365955324534),
     (487.1885040187836, 35.70298766515794)]

plt.bar([i for i in range(4)],
        [val[0] for val in A],
        yerr = [val[1] for val in A], capsize = 8)

plt.xticks([i for i in range(4)], ['50', '250', '1000', '4000'])

plt.xlabel('Number of nodes', fontsize = 15)
plt.ylabel('Time in seconds', fontsize = 15)
plt.tight_layout()

plt.savefig('Scale2.png', dpi = 300)
plt.show()
'''

# old:
L_O = [0.009, 0.15, 0.17, 0.18, 0.22, 0.15]
S_O = [0.42, 0.27, 0.20, 0.20, 0.18, 0.19]

# new:
L_N = [-0.24, -0.08, 0.001, -0.01, 0.024, -0.05]
S_N = [0.40, 0.26, 0.22, 0.21, 0.15, 0.21]

plt.bar([i for i in range(6)], L_O, color = 'red', linewidth = 2, label = 'ORIG', width = 0.2,
        yerr = S_O, capsize = 8)

plt.bar([i + 0.2 for i in range(6)], L_N, color = 'green', linewidth = 2, label = 'OPT3', width = 0.2,
        yerr = S_N, capsize = 8)

plt.xticks([i + 0.1 for i in range(5)], [15, 30, 45, 60, 75, 90])
plt.xlabel('Number of nodes', fontsize = 15)
plt.ylabel('E-I index', fontsize = 15)

plt.legend(loc = 'lower right')
plt.tight_layout()

plt.savefig('Homophily.png', dpi = 300)
plt.show()