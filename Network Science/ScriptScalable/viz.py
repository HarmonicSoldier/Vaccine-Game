import pickle
import numpy as np
import matplotlib.pyplot as plt


# def color_plot(L, clr, width, dist, lab):
#     plt.bar([i + dist for i in range(len(L))], [val[0] for val in L], color = clr,
#             yerr = [val[1] for val in L], width = width, label = lab, capsize = 4)
#     # plt.fill_between([i for i in range(len(L))],
#     #                  np.array([val[0] for val in L]) - np.array([val[1] for val in L]),
#     #                  np.array([val[0] for val in L]) + np.array([val[1] for val in L]), alpha=0.2, color = clr,
#     #                  facecolor=clr)

'''
plt.bar([i for i in range(4)], [7.2, 22.39, 64.27, 115.3],
        yerr = [1.60, 2.71, 16.35, 23.39], capsize = 10, width = 0.2, color = 'green', edgecolor = 'black', label = 'Sampling')

plt.bar([i + 0.2 for i in range(4)], [3.43, 29.09, 44.16, 495.03],
        yerr = [0.60, 11.37, 19.02, 200.57], capsize = 10, width = 0.2, color = 'brown', edgecolor = 'black', label = 'Grid')

plt.xticks([i + 0.1 for i in range(4)], ['250', '500', '750', '1000'])

plt.ylabel('Time in second', fontsize = 15)
plt.xlabel('Number of nodes', fontsize = 15)

plt.legend(loc = 'upper left')
plt.tight_layout()

plt.savefig('Scale.png', dpi = 300)
plt.show()
'''

'''
O_3_orig = [(5.7071594509232275, 2.915381456817214), (15.962718962546468, 4.782729877685615), (24.771106977628925, 3.890437368266202), (36.9244860685941, 8.831000136623858), (42.44654290657523, 7.708333312347906), (54.64948480750368, 8.358236145012485)]
color_plot(O_3_orig, 'red', 0.2, 0.2, 'ORIG')

O_33 = [(3.651319444444445, 1.9719807070432052), (10.602500061728394, 3.1332374716277642), (16.338457804232807, 3.362650810105013), (22.580875984126983, 6.125881208350822), (27.64965848480379, 5.196543024535378), (34.46008111111111, 5.628273496381505)]
color_plot(O_33, 'green', 0.2, 0.8, 'Conv 0.3')

O_34 = [(3.855566111111111, 2.050408374987111), (11.211502574955908, 3.42190165081536), (16.937389285714286, 3.3304304483029754),
        (24.318058178814386, 6.661683678612349), (28.890618415359345, 5.440349965876863), (36.3268201984127, 6.0974447554545534)]
color_plot(O_34, 'brown', 0.2, 0.6, 'Conv 0.4')

O_35 = [(3.8562169047619044, 2.052165479715796), (11.288169241622574, 3.396606551925299), (17.048738492063492, 3.4199139203341455), (25.19722087722708, 6.273978370767447), (29.782994983764482, 5.4799824335528164), (38.10084555408583, 6.448640622073123)]
color_plot(O_35, 'blue', 0.2, 0.4, 'Conv 0.5')

plt.xticks([i + 0.5 for i in range(len(O_33))], [15 * (i + 1) for i in range(len(O_33))])
plt.xlabel('Number of nodes', fontsize = 15)
# plt.ylabel('Mean time in seconds', fontsize = 15)
plt.ylabel('Mean score', fontsize = 15)

plt.title('Sampling Opt 3')
plt.legend(loc = 'upper left')
plt.tight_layout()

plt.savefig('S-opt3-score.png', dpi = 300)
# plt.savefig('S-opt3-time.png', dpi = 300)

plt.show()
'''

'''
ORIG_2 = [(0.1150579071044922, 0.042862764352530926), (1.5006763935089111, 0.4978629309178991),
          (6.5410546207427975, 2.211053859383869), (18.782653818130495, 6.048053653299992),
          (44.64374764442444, 19.97976345263447), (81.3310193347931, 25.455947431934)]

OPT_2 = [(0.06013039588928223, 0.013637174482755858), (0.2345980453491211, 0.02587834350654761),
         (0.610512752532959, 0.10598166232354445), (1.198089838027954, 0.14811415182173052),
         (1.781162176132202, 0.24734395014445335), (2.6553787422180175, 0.23378060141630957)]

OPT_1 = [(0.09457462310791015, 0.2613338814896212), (4.644757318496704, 18.75050171510015),
         (10.606330518722535, 22.407019097942865), (19.365249156951904, 40.928069239528526),
         (25.36323058128357, 66.88356394168572), (12.03041868209839, 39.7335662324623)]

ORIG_1 = [(0.13678062438964844, 0.08322017076361657), (1.5862960338592529, 0.8781442395208227),
          (6.488513078689575, 3.140235901645235), (17.322871446609497, 8.340295777052882),
          (38.54519772529602, 20.125987170265073), (64.99063665390014, 29.684416112743264)]

plt.errorbar([15 * (i + 1) for i in range(len(ORIG_1))], [val[0] for val in ORIG_1],
             color = 'red', linewidth = 2, label = 'Optimization 1', capsize = 5)

plt.errorbar([15 * (i + 1) for i in range(len(ORIG_2))], [val[0] for val in ORIG_2],
             color = 'blue', linewidth = 2, label = 'Optimization 2', capsize = 5)

plt.errorbar([15 * (i + 1) for i in range(len(OPT_1))], [val[0] for val in OPT_1],
             marker = 'o', color = 'red', linewidth = 2, linestyle = 'dashed', label = 'Sampling Opt 1 (0.3)',
             capsize = 5)

plt.errorbar([15 * (i + 1) for i in range(len(OPT_2))], [val[0] for val in OPT_2],
             marker = 'o', color = 'blue', linewidth = 2, linestyle = 'dashed', label = 'Sampling Opt 2 (0.3)',
             capsize = 5)

plt.xlabel('Number of nodes', fontsize = 15)
# plt.ylabel('Score', fontsize = 15)
plt.ylabel('Time in seconds', fontsize = 15)

plt.legend(loc = 'upper left')
plt.tight_layout()

plt.savefig('ORIG_TIME.png', dpi = 300)
plt.show()
'''

'''
O1_3 = [(0.09457462310791015, 0.2613338814896212), (4.644757318496704, 18.75050171510015), (10.606330518722535, 22.407019097942865), (19.365249156951904, 40.928069239528526), (25.36323058128357, 66.88356394168572), (12.03041868209839, 39.7335662324623), (19.42662881851196, 40.50010615669146), (3.590133991241455, 4.882184789080327)]
O1_4 = [(0.030075063705444337, 0.01064557868056486), (0.11352983474731446, 0.031643679244612), (0.27411771774291993, 0.092726856098277), (0.4991100215911865, 0.15212522246592425), (7.220803232192993, 31.43247537631435), (1.41807017326355, 0.5704494317623295), (1.5946562099456787, 0.3826063636252587), (2.007254762649536, 0.15750043807883704)]
O1_5 = [(0.023194370269775392, 0.0034624615712004684), (0.09386940956115723, 0.01531649917756866), (0.2034226894378662, 0.01960194782807468), (0.37426206588745115, 0.03634853211940547), (0.6253042888641357, 0.18039702116561412), (0.8139143466949463, 0.06813589838678594), (1.0566475105285644, 0.09025906053532483), (1.3296413898468018, 0.08158433394126623)]

plt.bar([i for i in range(5)],
         [val[0] for val in O1_5[:5]], color = 'blue', linewidth = 2, label = 'Conv. 0.5', width = 0.2,
        yerr = [val[1] for val in O1_5[:5]], capsize = 8)

plt.bar([i + 0.2 for i in range(5)],
        [val[0] for val in O1_4[:5]], color = 'brown', linewidth = 2, label = 'Conv. 0.4', width = 0.2,
        yerr = [val[1] for val in O1_4[:5]], capsize = 8)

plt.bar([i + 0.4 for i in range(5)],
        [val[0] for val in O1_3[:5]], color = 'green', linewidth = 2, label = 'Conv. 0.3', width = 0.2,
        yerr = [val[1] for val in O1_3[:5]], capsize = 8)

plt.xticks([i + 0.2 for i in range(5)], [str((i + 1)* 15) for i in range(5)])
plt.xlabel('Number of nodes', fontsize = 15)
plt.ylabel('Mean time in seconds', fontsize = 15)
plt.legend(loc = 'upper left')
plt.title('Sampling Opt 1')

plt.tight_layout()
plt.savefig('S-opt1-time2.png', dpi = 300)

plt.show()

O1 = [(0.13678062438964844, 0.08322017076361657), (1.5862960338592529, 0.8781442395208227),
      (6.488513078689575, 3.140235901645235), (17.322871446609497, 8.340295777052882),
      (38.54519772529602, 20.125987170265073), (64.99063665390014, 29.684416112743264)]

O2 = [(0.1150579071044922, 0.042862764352530926), (1.5006763935089111, 0.4978629309178991),
      (6.5410546207427975, 2.211053859383869), (18.782653818130495, 6.048053653299992),
      (44.64374764442444, 19.97976345263447), (81.3310193347931, 25.455947431934)]

S01 = [(0.09457462310791015, 0.2613338814896212), (4.644757318496704, 18.75050171510015),
       (10.606330518722535, 22.407019097942865), (19.365249156951904, 40.928069239528526),
       (25.36323058128357, 66.88356394168572), (16.47, 39.7335662324623)]

S02 = [(0.06013039588928223, 0.013637174482755858), (0.2345980453491211, 0.02587834350654761),
       (0.610512752532959, 0.10598166232354445), (1.198089838027954, 0.14811415182173052),
       (1.781162176132202, 0.24734395014445335), (2.6553787422180175, 0.23378060141630957)]

plt.plot([i for i in range(len(O1))],
         [pt[0] for pt in O1], linewidth = 2, color = 'red', label = 'Optimization 1')
plt.plot([i for i in range(len(O2))],
         [pt[0] for pt in O2], linewidth = 2, color = 'blue', label = 'Optimization 2')

plt.plot([i for i in range(len(O1))],
         [pt[0] for pt in S01], linewidth = 2, color = 'red', label = 'Sampling Opt 1 (0.3)', linestyle = 'dashed',
         marker = 'o')
plt.plot([i for i in range(len(O1))],
         [pt[0] for pt in S02], linewidth = 2, color = 'blue', label = 'Sampling Opt 2 (0.3)', linestyle = 'dashed',
         marker = 'o')

plt.xlabel('Number of nodes', fontsize = 15)
plt.ylabel('Time in seconds', fontsize = 15)
plt.legend()
plt.tight_layout()

plt.savefig('ORIG_TIME.png', dpi = 300)
plt.show()
'''

A1 = [44.84, 44.84, 45.0, 47.56, 49.6, 49.84, 52.76, 55.2, 55.2, 58.36, 60.48, 60.48, 62.4, 63.88, 63.88, 65.24, 66.48, 66.48, 67.76, 68.56, 68.56, 69.56, 70.56, 70.56, 71.08, 71.68, 71.68, 72.12, 72.56, 72.56, 73.0, 73.48, 73.48, 73.64, 73.8, 73.8, 74.24, 74.4, 74.4, 74.48, 74.68, 74.68, 74.76, 74.8, 74.8, 74.92, 75.16, 75.16, 75.2, 75.32, 75.32, 75.36, 75.36, 75.36, 75.4, 75.4, 75.4, 75.44, 75.48, 75.48, 75.48, 75.48, 75.48, 75.48, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52, 75.52]
S1 = [6.41672813823369, 6.41672813823369, 6.517668294720129, 6.567069361595019, 7.042726744663604, 7.319453531514495, 7.885581779425029, 7.899367063252599, 7.899367063252599, 8.03930345241427, 8.266172028212333, 8.266172028212333, 8.37615663654877, 8.406283364246056, 8.406283364246056, 8.723668952911957, 9.156942721236165, 9.156942721236165, 9.377760926788442, 9.261015063155874, 9.261015063155874, 9.457610691924256, 9.650202070423187, 9.650202070423187, 9.959598385477198, 10.038804709725156, 10.038804709725156, 9.94110657824369, 9.818676081835067, 9.818676081835067, 9.867117106835208, 9.802530285594633, 9.802530285594633, 9.854460918792059, 9.826494797230598, 9.826494797230598, 9.758196554691857, 9.736529155710468, 9.736529155710468, 9.66279462681475, 9.731269187521224, 9.731269187521224, 9.762294812184274, 9.76933979345585, 9.76933979345585, 9.77310595460829, 9.93450552367857, 9.93450552367857, 9.94786409235671, 9.906442348290328, 9.906442348290328, 9.915160109650271, 9.915160109650271, 9.915160109650271, 9.951884243699784, 9.951884243699784, 9.951884243699784, 9.96425611874765, 9.984467937752116, 9.984467937752116, 9.984467937752116, 9.984467937752116, 9.984467937752116, 9.984467937752116, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053, 10.016466442813053]

A3 = [44.84, 44.84, 45.08, 47.36, 49.52, 49.72, 52.96, 55.32, 55.32, 57.92, 60.72, 60.8, 63.52, 65.24, 65.76, 67.96, 69.44, 69.44, 70.8, 72.12, 72.2, 73.28, 74.2, 74.36, 75.4, 76.32, 76.36, 77.16, 77.56, 77.6, 78.2, 78.88, 78.92, 79.44, 79.88, 79.88, 80.04, 80.44, 80.44, 80.72, 81.0, 81.0, 81.16, 81.36, 81.36, 81.68, 81.76, 81.76, 82.0, 82.2, 82.2, 82.4, 82.48, 82.48, 82.64, 82.68, 82.68, 82.68, 82.68, 82.68, 82.68, 82.68, 82.68, 82.72, 82.72, 82.72, 82.72, 82.8, 82.8, 82.84, 82.84, 82.84, 82.84, 82.84, 82.84, 82.84, 82.84, 82.84, 82.84, 82.84, 82.84, 82.88, 82.88, 82.88, 82.88, 82.88, 82.88, 82.88, 82.88, 82.88, 82.88, 82.88, 82.88, 82.88, 82.92, 82.92, 82.92, 82.96, 82.96, 82.96]
S3 = [6.41672813823369, 6.41672813823369, 6.566094729746138, 6.973550028500549, 7.156088316950818, 7.7176162122769485, 7.987390061841227, 7.671870697554802, 7.671870697554802, 7.909083385576358, 7.927269391158598, 7.919595949289333, 8.040497497045815, 8.208678334543265, 8.32, 8.272750449517984, 8.532666640622965, 8.532666640622965, 8.414273587185052, 8.631662644010133, 8.713208364316786, 8.906267456123244, 8.87693640846886, 8.997244022477105, 9.21737489744233, 9.242164248702789, 9.234197312165254, 9.379466935812504, 9.575301561830834, 9.658157174119708, 9.703607576566563, 9.787011801362047, 9.732091244948334, 9.658488494583404, 9.6304517028019, 9.6304517028019, 9.775397690119823, 9.960240960940654, 9.960240960940654, 9.990075074792982, 10.0637965003273, 10.0637965003273, 10.082380671250219, 10.11090500400434, 10.11090500400434, 10.224363060846382, 10.10061384273253, 10.10061384273253, 10.11137972781163, 10.170545708072895, 10.170545708072895, 10.119288512538814, 10.167084144433938, 10.167084144433938, 10.07523696991788, 10.110272004253892, 10.110272004253892, 10.110272004253892, 10.110272004253892, 10.110272004253892, 10.110272004253892, 10.110272004253892, 10.110272004253892, 10.065863102585888, 10.065863102585888, 10.065863102585888, 10.065863102585888, 10.13903348450926, 10.13903348450926, 10.098237469974649, 10.098237469974649, 10.098237469974649, 10.098237469974649, 10.098237469974649, 10.098237469974649, 10.098237469974649, 10.098237469974649, 10.098237469974649, 10.098237469974649, 10.098237469974649, 10.098237469974649, 10.061093379946337, 10.061093379946337, 10.061093379946337, 10.061093379946337, 10.061093379946337, 10.061093379946337, 10.061093379946337, 10.061093379946337, 10.061093379946337, 10.061093379946337, 10.061093379946337, 10.061093379946337, 10.061093379946337, 10.027641796554164, 10.027641796554164, 10.027641796554164, 9.997919783634993, 9.997919783634993, 9.997919783634993]

A5 = [44.84, 44.84, 45.28, 47.84, 50.12, 50.28, 53.32, 55.28, 55.32, 58.76, 61.28, 61.76, 63.6, 65.84, 65.84, 67.84, 68.8, 68.84, 70.88, 72.0, 72.2, 73.48, 74.68, 74.68, 75.68, 76.24, 76.24, 77.12, 78.04, 78.16, 78.96, 79.48, 79.56, 80.4, 80.8, 80.84, 81.24, 81.52, 81.56, 82.08, 82.36, 82.36, 82.88, 82.92, 82.92, 83.12, 83.56, 83.6, 83.64, 83.76, 83.76, 83.8, 84.0, 84.0, 84.0, 84.0, 84.0, 84.2, 84.2, 84.2, 84.24, 84.28, 84.28, 84.32, 84.32, 84.32, 84.36, 84.4, 84.44, 84.44, 84.44, 84.44, 84.52, 84.52, 84.52, 84.56, 84.56, 84.56, 84.6, 84.64, 84.64, 84.64, 84.64, 84.64, 84.64, 84.72, 84.72, 84.72, 84.72, 84.72, 84.72, 84.72, 84.72, 84.72, 84.72, 84.72, 84.72, 84.76, 84.76, 84.76]
S5 = [6.41672813823369, 6.41672813823369, 6.785396082764808, 7.187099554062126, 6.724998141263685, 6.696387085585779, 6.691606683002222, 6.755856718433273, 6.76886992045201, 7.151391472993212, 7.779562969730368, 7.7834696633313865, 8.094442537939225, 8.147048545332229, 8.147048545332229, 8.142137311541731, 8.153526844255804, 8.117536572138127, 8.486789734640537, 8.704022058795578, 8.740709353364863, 8.338441101309046, 8.427194076322202, 8.427194076322202, 8.54971344549044, 8.967853700858416, 8.967853700858416, 9.274998652291007, 9.556066136229907, 9.573630450356854, 9.832517480279401, 9.976452275232916, 10.139349091534426, 10.186265262597475, 10.537551897855593, 10.566664563617035, 10.531020843204137, 10.658780418040331, 10.651122006624465, 10.55621144161105, 10.533299578004986, 10.533299578004986, 10.496932885371804, 10.514447203728782, 10.514447203728782, 10.538766531240741, 10.461663347670868, 10.49571341072154, 10.556059870993533, 10.681872495026328, 10.681872495026328, 10.75174404457249, 10.762899237658969, 10.762899237658969, 10.762899237658969, 10.762899237658969, 10.762899237658969, 10.673331251301066, 10.673331251301066, 10.673331251301066, 10.685616500698497, 10.701476533637775, 10.701476533637775, 10.653525238154739, 10.653525238154739, 10.653525238154739, 10.672881522812853, 10.692053123698928, 10.647365871425665, 10.647365871425665, 10.647365871425665, 10.647365871425665, 10.6962423308375, 10.6962423308375, 10.6962423308375, 10.729697106628873, 10.729697106628873, 10.729697106628873, 10.721940122944169, 10.758735985235441, 10.758735985235441, 10.758735985235441, 10.758735985235441, 10.758735985235441, 10.758735985235441, 10.679026172830554, 10.679026172830554, 10.679026172830554, 10.679026172830554, 10.679026172830554, 10.679026172830554, 10.679026172830554, 10.679026172830554, 10.679026172830554, 10.679026172830554, 10.679026172830554, 10.679026172830554, 10.644360008943703, 10.644360008943703, 10.644360008943703]

plt.plot([i for i in range(len(A1))], A1, linewidth = 2, color = 'blue')
plt.plot([i for i in range(len(A3))], A3, linewidth = 2, color = 'green')
plt.plot([i for i in range(len(A5))], A5, linewidth = 2, color = 'red')

plt.fill_between([i for i in range(len(A1))], np.array(A1) - np.array(S1), np.array(A1) + np.array(S1),
                 alpha = 0.1, color = 'blue', label = 'Ignore 0.1')

plt.fill_between([i for i in range(len(A1))], np.array(A3) - np.array(S3), np.array(A3) + np.array(S3),
                 alpha = 0.1, color = 'green', label = 'Ignore 0.3')

plt.fill_between([i for i in range(len(A1))], np.array(A5) - np.array(S5), np.array(A5) + np.array(S5),
                 alpha = 0.1, color = 'red', label = 'Ignore 0.5')

plt.xlabel('Time epochs', fontsize = 15)
plt.ylabel('Score', fontsize = 15)
plt.legend(loc = 'upper left')

plt.tight_layout()
plt.savefig('Flout.png', dpi = 300)
plt.show()